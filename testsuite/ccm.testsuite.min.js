(()=>{const component={name:"testsuite",ccm:"https://ccmjs.github.io/ccm/versions/ccm-25.0.0.js",config:{html:["ccm.load","https://ccmjs.github.io/akless-components/testsuite/resources/templates.html"],css:["ccm.load","https://ccmjs.github.io/akless-components/testsuite/resources/default.css"],onfinish:{log:true},helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-1.0.0.mjs"]},Instance:function(){let $;const setups=[];const finallies=[];let results;this.ready=(async()=>{$=this.ccm.helper;if(!this.package)return;const array=this.package.split(".");while(array.length>0){if(this.tests.setup)setups.push(this.tests.setup);if(this.tests.finally)finallies.unshift(this.tests.finally);this.tests=this.tests[array.shift()]}});this.start=(async()=>{const self=this;results={executed:0,passed:0,failed:0,details:{}};let main_elem,packages_elem,test_elem,table_elem,result_elem;if(self.element){main_elem=$.html(self.html.main);packages_elem=main_elem.querySelector("#packages");self.helper.setContent(self.element,main_elem)}await processPackage(self.package||"",self.tests||{},setups,finallies);await this.helper.onFinish(self);async function processPackage(package_path,package_obj,setups,finallies){if(package_obj.setup){setups=setups.slice();setups.push(package_obj.setup)}if(package_obj.finally){finallies=finallies.slice();finallies.unshift(package_obj.finally)}package_obj.tests&&await runPackageTests(package_obj.tests);delete package_obj.setup;delete package_obj.tests;for(const key in package_obj){const package=package_obj[key];delete package_obj[key];await processPackage((package_path?package_path+".":"")+key,package,setups,finallies)}async function runPackageTests(tests){if(self.element){const package_elem=$.html(self.html.package,package_path);table_elem=package_elem.querySelector(".table");packages_elem.appendChild(package_elem)}await self.helper.asyncForEach(Object.keys(tests).map(key=>tests[key]),async test=>{if(self.element){main_elem.querySelector("#executed").appendChild(self.helper.loading(self));test_elem=$.html(self.html.test,test.name);table_elem.appendChild(test_elem);result_elem=test_elem.querySelector(".result");result_elem.appendChild(self.helper.loading(self))}const suite={ccm:self.ccm,passed:()=>addResult(true),failed:message=>{addResult(false);if(message)addMessage(message)},assertTrue:condition=>addResult(!!condition),assertFalse:condition=>addResult(!condition),assertSame:(expected,actual)=>{const result=expected===actual;addResult(result);if(!result)addComparison(expected,actual)},assertEquals:(expected,actual)=>suite.assertSame(typeof expected==="object"?JSON.stringify(expected):expected,typeof actual==="object"?JSON.stringify(actual):actual),assertNotSame:(expected,actual)=>addResult(expected!==actual),assertNotEquals:(expected,actual)=>suite.assertNotSame(JSON.stringify(expected),JSON.stringify(actual))};await self.helper.asyncForEach(setups,async setup=>setup(suite));results.executed++;try{await test(suite)}catch(e){addResult(false);addMessage(e.name+(e.message?": "+e.message:""))}if(self.element){main_elem.querySelector("#executed").innerHTML=results.executed.toString();main_elem.querySelector("#passed").innerHTML=results.passed.toString();main_elem.querySelector("#failed").innerHTML=results.failed.toString()}await self.helper.asyncForEach(finallies,final=>final(suite));function addResult(result){const value=result?"passed":"failed";if(result)results.passed++;else results.failed++;if(self.element)self.helper.setContent(result_elem,$.html(self.html.result,{value:value}));results.details[package_path+"."+test.name]=result}function addMessage(message){if(self.element)test_elem.appendChild($.html(self.html.message,message));results.details[package_path+"."+test.name]=message}function addComparison(expected,actual){if(self.element){if(typeof expected==="object")expected=$.stringify(expected);expected=self.helper.escapeHTML(expected);if(typeof actual==="object")actual=$.stringify(actual);actual=self.helper.escapeHTML(actual);test_elem.appendChild($.html(self.html.comparison,expected,actual))}results.details[package_path+"."+test.name]={expected:expected,actual:actual}}})}}});this.getValue=(()=>$.clone(results))}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();