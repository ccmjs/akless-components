import{AttributePart,BooleanAttributePart,directive,EventPart,NodePart,PropertyPart}from"../lit-html.js";export const live=directive(value=>part=>{let previousValue;if(part instanceof EventPart||part instanceof NodePart){throw new Error("The `live` directive is not allowed on text or event bindings")}if(part instanceof BooleanAttributePart){checkStrings(part.strings);previousValue=part.element.hasAttribute(part.name);part.value=previousValue}else{const{element:element,name:name,strings:strings}=part.committer;checkStrings(strings);if(part instanceof PropertyPart){previousValue=element[name];if(previousValue===value){return}}else if(part instanceof AttributePart){previousValue=element.getAttribute(name)}if(previousValue===String(value)){return}}part.setValue(value)});const checkStrings=strings=>{if(strings.length!==2||strings[0]!==""||strings[1]!==""){throw new Error("`live` bindings can only contain a single expression")}};