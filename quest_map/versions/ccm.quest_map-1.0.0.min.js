(()=>{const component={name:"quest_map",version:[1,0,0],ccm:"https://ccmjs.github.io/ccm/versions/ccm-25.5.2.js",config:{css:["ccm.load","https://ccmjs.github.io/akless-components/quest_map/resources/styles.css"],data:{store:["ccm.store"]},helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-5.1.0.mjs"],html:["ccm.load","https://ccmjs.github.io/akless-components/quest_map/resources/templates.html"],image_map:["ccm.component","https://ccmjs.github.io/akless-components/image_map/versions/ccm.image_map-1.1.0.js"]},Instance:function(){let $,app_data,user_app_data;this.init=(async()=>{$=Object.assign({},this.ccm.helper,this.helper);if(this.user)this.user.onchange=this.start});this.ready=(async()=>{this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{$.setContent(this.element,$.loading(this));app_data=await $.dataset(this.data);user_app_data=this.user&&await this.user.getAppData(this.app_key);if(!app_data.areas)app_data.areas=[];for(let i=app_data.areas.length-1;i>=0;i--){const area=app_data.areas[i];if(area.action&&area.postcondition)area.action[2]={key:area.action[2],onfinish:async()=>{this.user&&await this.user.login();await performPostcondition(area.postcondition);await this.start()}};area.disabled=!await checkPrecondition(area.precondition_enabled);if(!await checkPrecondition(area.precondition_visible))app_data.areas.splice(i,1)}this.logger&&this.logger.log("start",$.clone(app_data));const main_elem=$.html(this.html.main);if(this.user){$.append(main_elem.querySelector("#top"),this.user.root);this.user.start()}await this.image_map.start({root:main_elem.querySelector("#image_map"),data:{store:["ccm.store",{app:app_data}],key:"app"}});$.setContent(this.element,main_elem);this.onstart&&await this.onstart({data:$.clone(app_data),instance:this})});const checkPrecondition=async condition=>{if(!condition)return true;if(!user_app_data)return false;const check=(key,value)=>{const user_value=$.deepValue(user_app_data,key);if(typeof value==="string")return value.startsWith(">")&&user_value>parseInt(value.substr(1));if(typeof value==="boolean")return user_value;return user_value==value};for(const key in condition)if(!check(key,condition[key]))return false;return true};const performPostcondition=async condition=>{if(!this.user||!this.user.isLoggedIn())return;if(!user_app_data)user_app_data={};for(const key in condition){const value=condition[key];const user_value=$.deepValue(user_app_data,key);if(typeof value==="string"&&value.startsWith("+"))$.deepValue(user_app_data,key,parseInt(user_value||0)+parseInt(value.substr(1)));else $.deepValue(user_app_data,key,value)}await this.user.setAppData(this.app_key,$.clone(user_app_data))}}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();