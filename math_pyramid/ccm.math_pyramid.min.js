(()=>{const component={name:"math_pyramid",ccm:"https://ccmjs.github.io/ccm/versions/ccm-25.1.0.js",config:{captions:{cancel:"Cancel",feedback:"Feedback",retry:"Retry",finish:"Finish"},css:["ccm.load","https://ccmjs.github.io/akless-components/math_pyramid/resources/styles.css"],feedback:true,helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-4.0.2.mjs"],html:["ccm.load","https://ccmjs.github.io/akless-components/math_pyramid/resources/templates.html"],max:1e3,min:500,operator:"+",size:5},Instance:function(){let $,numbers,solutions,results={};const self=this;this.ready=(async()=>{$=Object.assign({},this.ccm.helper,this.helper);this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{numbers=solutions=undefined;results={};$.setContent(self.element,"");calculateNumbers();if(!numbers)return;buildPyramid();renderButtons();this.logger&&this.logger.log("start",numbers.splice());function calculateNumbers(){if(Array.isArray(self.numbers))numbers=self.numbers.slice();else{let randoms,tries=0;do{if(tries++>1e6)return console.log("Calculation of numbers failed.");randoms=[];let max;for(let i=0;i<self.size;i++){switch(self.operator){case"+":max=self.max/self.size;break;case"*":max=self.max/Math.pow(2,self.size);break;default:max=self.max}randoms.push(Math.floor(1+Math.random()*max))}solutions=calculateSolutions(randoms)}while(solutions[0]<self.min||solutions[0]>self.max);numbers=randoms}function calculateSolutions(numbers){let solutions=numbers.slice();let tmp=[];while(numbers.length>0){for(let i=numbers.length-1;i>0;i--)tmp.unshift(operator(numbers[i],numbers[i-1]));solutions=tmp.concat(solutions);numbers=tmp;tmp=[]}return solutions;function operator(a,b){switch(self.operator){case"+":return a+b;case"*":return a*b}}}}function buildPyramid(){$.setContent(self.element,$.html(self.html.main));const max_number_length=(self.max||solutions[0]).toString().length+1;const pyramid=self.element.querySelector("#pyramid");let brick;for(let i=0;i<numbers.length;i++){for(let k=0,j=numbers.length-1-i;j<numbers.length;j++){if(i===numbers.length-1)$.append(pyramid,brick=$.html({class:"disabled",inner:numbers[k]}));else $.append(pyramid,brick=$.html({contenteditable:true,oncopy:"return false",oncut:"return false",onpaste:"return false",onkeypress:event=>{const char=String.fromCharCode(event.which);if(isNaN(char)||event.target.innerText.length>=max_number_length-1)event.preventDefault()}}));brick.style.gridColumnStart=numbers.length-i+2*k++}brick.style.gridRowStart=i+1}pyramid.style.gridTemplateColumns=`repeat( ${numbers.length*2}, ${max_number_length/2}em )`;pyramid.style.gridTemplateRows=`repeat( ${numbers.length}, auto )`;self.element.querySelectorAll("#pyramid > div").forEach((brick,i)=>brick.addEventListener("input",event=>{const value=event.target.innerText;if(value.startsWith("0")&&value!=="0")event.target.innerText=parseInt(value);else self.onchange&&self.onchange({instance:self,element:event.target,section:i,value:parseInt(value)})}))}function renderButtons(){self.oncancel&&renderButton(self.element.querySelector("#cancel"),self.captions.cancel,()=>{self.logger&&self.logger.log("cancel",self.getValue());self.oncancel(self)});self.feedback&&renderButton(self.element.querySelector("#feedback"),self.captions.feedback,feedback);self.onfinish&&renderButton(self.element.querySelector("#finish"),self.captions.finish,onFinish);function renderButton(element,caption,click){$.setContent(element,$.html(self.html.button,{caption:caption,onclick:click}))}function feedback(){self.element.querySelectorAll("#pyramid > div").forEach((brick,i)=>{if(brick.classList.contains("disabled"))return;const correct=parseInt(brick.innerText)===solutions[i];brick.classList.remove("correct","wrong");brick.contentEditable=false;brick.classList.add(correct?"correct":"wrong");if(self.solutions)brick.innerText=solutions[i]});self.logger&&self.logger.log("feedback",self.getValue());self.onfeedback&&self.onfeedback(self);updateFeedbackButton(true);function updateFeedbackButton(feedback){if(!self.feedback)return;if(!feedback)renderButton(self.element.querySelector("#feedback"),self.captions.feedback,feedback);else if(self.retry&&!self.solutions)renderButton(self.element.querySelector("#feedback"),self.captions.retry,retry);else self.element.querySelector("#feedback button").disabled=true;function retry(){self.element.querySelectorAll("#pyramid > div").forEach(brick=>{brick.classList.remove("correct","wrong");brick.contentEditable=true});self.logger&&self.logger.log("retry",self.getValue());self.onretry&&self.onretry(self);updateFeedbackButton()}}}function onFinish(){$.remove(self.element.querySelector("#finish"));self.logger&&self.logger.log("finish",self.getValue());this.feedback&&feedback();$.onFinish(self)}}});this.getValue=(()=>{evaluate();return $.clone(results);function evaluate(){results={sections:[],correct:0,total:solutions.length-numbers.length};self.element.querySelectorAll("#pyramid > div").forEach((brick,i)=>{if(brick.classList.contains("disabled"))return;const correct=parseInt(brick.innerText)===solutions[i];correct&&results.correct++;results.sections.push({input:parseInt(brick.innerText),solution:solutions[i],correct:correct})})}})}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();