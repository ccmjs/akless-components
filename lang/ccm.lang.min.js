(()=>{const component={name:"lang",ccm:"https://ccmjs.github.io/ccm/versions/ccm-27.2.0.min.js",config:{css:["ccm.load","https://ccmjs.github.io/akless-components/lang/resources/styles.min.css"],dark:false,html:["ccm.load","https://ccmjs.github.io/akless-components/lang/resources/templates.mjs"],languages:{de:{de:"Deutsch",en:"Englisch"},en:{de:"German",en:"English"}},translations:{de:{},en:{}}},Instance:function(){let context;this.init=async()=>{context=(this.ccm.context.highestByProperty(this,"lang",true)||{}).lang;if(context)this.active=context.active;else{if(!this.active)this.active=document.body.getAttribute("lang");if(!this.active)this.active=navigator.language;this.active=this.active.split("-")[0].toLowerCase();if(!this.translations[this.active])this.active=Object.keys(this.translations)[0]}if(context){context.onchange.push(this.switch);this.onchange&&context.onchange.push(this.onchange);delete this.onchange}else this.onchange=this.onchange?[this.onchange]:[]};this.ready=async()=>{this.dark==="auto"&&this.element.classList.add("dark_auto");this.dark===true&&this.element.classList.add("dark_mode")};this.start=async()=>{if(context){this.element.innerHTML="";return}this.html.render(this.html.main(this.languages[this.active],this.active,this.switch),this.element)};this.getValue=()=>context?context.getValue():this.active;this.getContext=()=>context;this.observe=callback=>(context||this).onchange.push(callback);this.switch=lang=>{if(!this.translations[lang])return;if(context&&context.active!==lang)return context.switch(lang);this.active=lang;this.start();this.translate();this.onchange&&this.onchange.forEach((onchange=>onchange(lang)))};this.translate=content=>{if(typeof content==="string")return translateIndex(content);else if(this.ccm.helper.isElement(content))return translateElement(content);else if(this.ccm.helper.isObject(content))return translateDataset();else return translateElement(this.parent.element)};const translateIndex=index=>this.translations[this.active][index];const translateElement=elem=>{elem.querySelectorAll("*[data-lang]").forEach((elem=>{elem.dataset.lang.split(" ").forEach((index=>{if(!index)return;const split=index.split("-");let translation=this.ccm.helper.deepValue(this.translations[this.active],split[0]);if(!translation)return;if(split.length>2){let i=2;translation=translation.replace(/%%/g,(match=>split[i++]||match))}if(split[1])elem.setAttribute(split[1],translation);else elem.innerHTML=translation}))}))};const translateDataset=data=>{for(const key in data)if(data[key+"-"+this.active])data[key]=data[key+"-"+this.active]}}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||[""])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){(c="latest"?window.ccm:window.ccm[c]).component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();
//# sourceMappingURL=ccm.lang.min.js.map