(()=>{const component={name:"result",ccm:"https://ccmjs.github.io/ccm/versions/ccm-25.0.0.js",config:{chart:["ccm.component","https://ccmjs.github.io/akless-components/highchart/versions/ccm.highchart-3.0.2.js"],css:["ccm.load",["https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css","https://ccmjs.github.io/akless-components/result/resources/default.css"]],helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-4.0.2.mjs"],html:["ccm.load","https://ccmjs.github.io/akless-components/result/resources/templates.html"],moment:["ccm.load","https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"],menu:["ccm.component","https://ccmjs.github.io/akless-components/menu/versions/ccm.menu-2.4.4.js",["ccm.get","https://ccmjs.github.io/akless-components/menu/resources/configs.js","bootstrap"]],placeholder:{user:"User",comp:"Component",app:"App",show_all:"Show All",details:"Details",captions:["User","Component","App","Correct","Result","Created","Last Update"," "],rankings:["Rank","User","Correct","Result","Time Stamp"],message:"Nothing to display.",choose:"Please Choose",back:"← Back to Result Table"},sections:["Show Results","Ranking","Correctness","Timing","Sections"],store:["ccm.store"],table:["ccm.component","https://ccmjs.github.io/tkless-components/table/versions/ccm.table-4.1.0.js"]},Instance:function(){const self=this;let $;let results;const elem={};this.init=(async()=>{$=Object.assign({},self.ccm.helper,self.helper);if(!self.app){self.placeholder.captions[1]="";self.placeholder.captions[7]=""}if(self.user)self.user.onchange=self.start;self.store.onchange=update});this.ready=(async()=>{this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{$.setContent(self.element,elem.main=$.html(self.html.main));if(self.user){$.setContent(self.element.querySelector("#user"),self.user.root);await self.user.start()}self.logger&&self.logger.log("start");elem.section=elem.main.querySelector("#section");results=await self.ccm.store(await self.store.get({}));self.app&&await $.asyncForEach(await results.get({}),result=>searchApp(result));await self.menu.start({root:self.element.querySelector("#menu"),data:{entries:$.cleanObject($.clone(self.sections))},selected:self.selected||1,onclick:event_data=>{$.setContent(elem.section,$.html(self.html.section));elem.filter=elem.section.querySelector("#filter");elem.content=elem.section.querySelector("#content");self.selected=event_data.nr;update()}})});async function update(data){if(data!==undefined){const deleted=!$.isObject(data);const key=deleted?data:data.key;let exists=false;if($.isObject(data))await searchApp(data);if(await results.get(key)){if(deleted)await results.del(key);else await results.set(data);exists=true}if(!exists&&!deleted)await results.set(data)}$.setContent(elem.filter,"");$.setContent(elem.content,"");const comp_filter=Array.isArray(self.app);const sections=[()=>{renderSection(true,true,onChange);async function onChange(){self.choosed_user=elem.user.value;self.choosed_comp=comp_filter&&elem.comp.value;self.choosed_app=elem.app.value;const results=await filterResults();if(!results.length)return $.setContent(elem.content,self.placeholder.message);const values=[];await $.asyncForEach(results,async(result,i)=>{let row=[Array.isArray(result.key)&&result.key[1]||"",result._name||"",result._app||(Array.isArray(result.key)?result.key[0]:result.key),result.correct,result.result,self.moment?moment(result.created_at).format("MMMM Do YYYY, h:mm:ss a"):result.created_at,self.moment?moment(result.updated_at).format("MMMM Do YYYY, h:mm:ss a"):result.updated_at,""];if(Number.isInteger(result.correct)&&Number.isInteger(result.total))row[3]=result.correct+"/"+result.total;if(result.value===undefined&&Number.isInteger(result.correct)&&Number.isInteger(result.total))row[4]=Math.round(result.correct*100/result.total)+"%";if(self.app)row[7]=$.html(self.html.button,{id:"result-"+(i+1),caption:self.placeholder.details}).innerHTML;row=row.filter((value,i)=>self.placeholder.captions[i]!=="");values.push(row)});const table=await self.table.start({root:elem.content,table_head:self.placeholder.captions.filter(caption=>caption!==""),data:{values:values}});[...table.element.querySelectorAll(".button-details")].forEach(button=>{button.addEventListener("click",async function(){let result=results[parseInt(this.id.split("-").pop())-1];self.app&&!result._config&&await searchApp(result);if(!result._config)return $.remove(this);elem.main.style.display="none";$.append(self.element,$.html(self.html.details,{caption:self.placeholder.back,onclick:()=>{$.remove(self.element.querySelector("#details"));elem.main.style.display="block"}}));const{_component:_component,_config:_config}=result;await _component.start(await $.integrate({root:self.element.querySelector("#app"),data:$.clone(result),show_results:true},_config))})})}},()=>{renderSection(false,true,onChange);async function onChange(){self.choosed_app=elem.app.value;self.choosed_comp=comp_filter&&elem.comp.value;const results=await filterResults("correct","total","updated_at");if(!results.length)return $.setContent(elem.content,self.placeholder.message);const ranking={};const apps={};let max_total=0;results.forEach(result=>{const user=Array.isArray(result.key)&&result.key[1];if(!user||!Number.isInteger(result.correct)||!Number.isInteger(result.total))return;const app=result.key[0];if(!apps[app]){apps[app]={};max_total+=result.total}if(!apps[app][user]||result.correct>apps[app][user])apps[app][user]=result;if(!ranking[user])ranking[user]=[user,0,0,result.updated_at];else if(new Date(result.updated_at).getTime()>new Date(ranking[user][3]).getTime())ranking[user][3]=result.updated_at});for(const app in apps)for(const user in apps[app]){ranking[user][1]+=apps[app][user].correct;ranking[user][2]+=apps[app][user].total}const values=Object.values(ranking);values.sort((a,b)=>{if(b[1]!==a[1])return b[1]-a[1];else if(b[2]!==a[2])return b[2]-a[2];else return new Date(a[3]).getTime()-new Date(b[3]).getTime()});values.forEach((row,i)=>{const result=Math.round(row[1]*100/max_total)+"%";row[1]=row[1]+"/"+max_total;row[2]=result;row.unshift(i+1)});await self.table.start({root:elem.content,table_head:self.placeholder.rankings.filter(caption=>caption!==""),data:{values:values}})}},()=>{renderSection(false,false,onChange);async function onChange(){self.choosed_app=elem.app.value;if(!self.choosed_app)return $.setContent(elem.content,"");const results=await filterResults("correct","total");if(!results.length)return $.setContent(elem.content,self.placeholder.message);let data=[],total=results[0].total;for(let i=0;i<=total;i++)data[i]={name:i+" of "+total+" Section(s)",y:0};results.forEach(result=>data[result.correct].y++);data=data.filter(entry=>entry.y);data.forEach(entry=>{entry.x=entry.y/total*100});await self.chart.start({root:elem.content,settings:{chart:{plotBackgroundColor:null,plotBorderWidth:null,plotShadow:false,type:"pie"},title:{text:"In how many results were how many sections correctly answered?"},tooltip:{pointFormat:"In <b>{point.y} of "+results.length+" Result(s)</b> are <b>{point.name}</b> of the app correctly answered."},plotOptions:{pie:{allowPointSelect:true,cursor:"pointer",dataLabels:{enabled:true,format:"{point.y} of {point.total} Result(s) {point.percentage:.1f}%",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}},showInLegend:true}},series:[{data:data}]}})}},()=>{renderSection(true,true,onChange);async function onChange(){self.choosed_user=elem.user.value;self.choosed_comp=comp_filter&&elem.comp.value;self.choosed_app=elem.app.value;const results=await filterResults("created_at","updated_at");if(!results.length)return $.setContent(elem.content,self.placeholder.message);const series=[{type:"line",name:"created",data:[]},{type:"line",name:"last updated",data:[]}];const created={};const updated={};const add=(time,obj)=>{time=new Date(time);time.setMinutes(0);time.setSeconds(0);time.setMilliseconds(0);time=time.getTime();obj[time]?obj[time]++:obj[time]=1;if(obj[time]!==1)return;const before=time-60*60*1e3;const after=time+60*60*1e3;if(!obj[before])obj[before]=0;if(!obj[after])obj[after]=0};results.forEach(result=>{add(result.created_at,created);add(result.updated_at,updated)});for(const time in created)series[0].data.push([parseInt(time),created[time]]);for(const time in updated)series[1].data.push([parseInt(time),updated[time]]);series[0].data.sort((a,b)=>b[0]-a[0]);series[1].data.sort((a,b)=>b[0]-a[0]);await self.chart.start({root:elem.content,settings:{chart:{zoomType:"x"},title:{text:"When were results first time created and last time updated?"},time:{timezoneOffset:(new Date).getTimezoneOffset()},xAxis:{type:"datetime"},yAxis:{title:{text:"Results"},tickInterval:1},tooltip:{pointFormat:"In this hour, a result was <b>{series.name}</b> for <b>{point.y}</b> time(s)."},legend:{enabled:true},series:series}})}},()=>{renderSection(false,false,async()=>{self.choosed_app=elem.app.value;if(!self.choosed_app)return $.setContent(elem.content,"");const results=await filterResults("sections");if(!results.length)return $.setContent(elem.content,self.placeholder.message);const categories=[];const data=[];results[0].sections.forEach((section,i)=>{categories[i]=i+1;data[i]=0});results.forEach(result=>result.sections.forEach((section,i)=>section.correct&&data[i]++));await self.chart.start({root:elem.content,settings:{chart:{type:"column"},title:{text:"How often was which section answered correctly?"},xAxis:{categories:categories,title:{text:"App Section"}},yAxis:{min:0,max:results.length,title:{text:"Correct Results"},allowDecimals:false},tooltip:{pointFormat:"<b>Section {point.category}</b> was answered <b>{point.y}</b> time(s) correctly."},legend:{enabled:false},series:[{data:data}]}})})}];sections[self.selected-1]();function renderSection(user_filter,show_all,onChange){user_filter&&addSelectorBox("user",show_all?"show_all":"choose",onChange);comp_filter&&show_all&&addSelectorBox("comp",show_all?"show_all":"choose",onChange);addSelectorBox("app",show_all?"show_all":"choose",onChange);fillSelectorBoxes();onChange();function addSelectorBox(entry,first,onChange){elem[entry]=$.html(self.html.filter,{filter:entry,label:self.placeholder[entry],first:self.placeholder[first],onchange:onChange});$.append(elem.filter,elem[entry]);elem[entry]=elem[entry].querySelector("#"+entry+"-input")}async function fillSelectorBoxes(){(await results.get({})).forEach(result=>{const user=Array.isArray(result.key)&&result.key[1];const app=Array.isArray(result.key)?result.key[0]:result.key;if(elem.user&&user&&!elem.user.querySelector('option[value="'+user+'"]'))$.append(elem.user,$.html({tag:"option",value:user,inner:user,selected:user===self.choosed_user}));if(!elem.app.querySelector('option[value="'+app+'"]'))$.append(elem.app,$.html({tag:"option",value:app,inner:result._app||app,selected:app===self.choosed_app}))});if(comp_filter)self.app.forEach(app=>{const comp=app.name||app.component.name;if(elem.comp&&!elem.comp.querySelector('option[value="'+comp+'"]'))$.append(elem.comp,$.html({tag:"option",value:comp,inner:comp,selected:comp===self.choosed_comp}))})}}async function filterResults(required_properties){required_properties=[...arguments];return(await results.get({})).filter(result=>{for(let i=0;i<required_properties.length;i++)if(result[required_properties[i]]===undefined)return false;const app=Array.isArray(result.key)?result.key[0]:result.key;const user=Array.isArray(result.key)&&result.key[1];if(!self.choosed_user||self.choosed_user===user)if(!self.choosed_comp||self.choosed_comp===result._name)if(!self.choosed_app||self.choosed_app===app)return true;return false})}}async function searchApp(result,app=self.app){if(Array.isArray(app))return $.asyncForEach(app,async app=>searchApp(result,app));if(!app.configs||result._config)return;result._config=(await app.configs.get({"data.key":Array.isArray(result.key)?result.key[0]:result.key}))[0];if(!result._config)return;result._component=app.component;result._name=app.name||app.component.name;result._app=result._config.key.toString();results.local[result.key]=result}}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();