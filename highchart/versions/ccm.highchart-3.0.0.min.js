(function(){const component={name:"highchart",version:[3,0,0],ccm:"https://ccmjs.github.io/ccm/versions/ccm-19.0.0.js",config:{html:{id:"chart",style:"%%"},data:{},settings:{},style:"min-width: 400px; max-width: 800px; min-height: 400px; max-height: 800px; margin: 0 auto"},ready:async function(){!window.Highcharts&&await this.ccm.load(this.ccm.components[component.index].lib||"https://ccmjs.github.io/akless-components/libs/highcharts/highcharts.js")},Instance:function(){let $,data;this.ready=(async()=>{$=this.ccm.helper;this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{data=await $.dataset(this.data);if($.isObject(data)){const arr=[];for(const key in data)arr.push([key,data[key]]);data=arr}this.logger&&this.logger.log("start",$.clone(data));$.setContent(this.element,$.html(this.html,this.style));const chart_elem=this.element.querySelector("#chart");this.chart=Highcharts.chart(chart_elem,$.clone(this.settings));$.wait(1,()=>this.chart.redraw())});this.getValue=(()=>data)}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();