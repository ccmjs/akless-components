let ccm=window.ccm;export const use=version=>ccm=version;export const action=async(action,context)=>{if(!Array.isArray(action))action=[action];action[0]=await ccm.helper.solveDependency(action[0]);if(typeof action[0]==="function")return action[0].apply(context,action.slice(1));else return executeByName(action[0],action.slice(1),context)};export const executeByName=(name,args,context)=>{const namespaces=name.split(".");let flag;if(namespaces[0]==="this")flag=!!namespaces.shift();let namespace=flag?context:window;name=namespaces.pop();namespaces.forEach(value=>namespace=namespace[value]);return namespace[name].apply(context,args)};export const asyncForEach=async(array,callback)=>{for(let i=0;i<array.length;i++)await callback(array[i],i,array)};export const sleep=time=>new Promise(resolve=>setTimeout(resolve,time));export const triggerEvent=(instance,event,data={})=>{data.instance=instance.index;data.root=ccm.context.root(instance).index;data.event=event;document.dispatchEvent(new CustomEvent("ccm-"+instance.component.name,{detail:data}))};export const hasDomContact=instance=>document.contains(ccm.context.root(instance).root)&&(hasParentContact(instance)||!instance.parent);export const hasParentContact=instance=>instance.parent&&instance.parent.element.contains(instance.root);export const isFirefox=()=>navigator.userAgent.search("Firefox")>-1;export const isGoogleChrome=()=>/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor);export const isSafari=()=>/^((?!chrome|android).)*safari/i.test(navigator.userAgent);export const arrToObj=arr=>{if(!Array.isArray(arr))return null;const result={};arr.forEach(value=>result[value]=true);return result};export const cleanObject=(obj,deep)=>{if(Array.isArray(obj)){for(let i=obj.length-1;i>=0;i--)if(!obj[i])obj.splice(i,1);else if(deep&&typeof obj[i]==="object"&&!ccm.helper.isSpecialObject(obj[i]))cleanObject(obj[i])}else for(const key in obj)if(obj.hasOwnProperty(key))if(!obj[key])delete obj[key];else if(deep&&typeof obj[key]==="object"&&!ccm.helper.isSpecialObject(obj[key]))cleanObject(obj[key]);return obj};export const decodeJSON=str=>{if(typeof str!=="string"||!ccm.helper.regex("json").test(str))return null;return ccm.helper.parse(str.replace(/%'%/g,'"'))};export const encodeJSON=json=>{if(typeof json!=="object")return"";return ccm.helper.stringify(json).replace(/"/g,"%'%")};export const escapeHTML=value=>{const text=document.createTextNode(value);const div=document.createElement("div");div.appendChild(text);return div.innerHTML};export const filterData=(data,mask)=>{if(!mask)return ccm.helper.clone(data);data=ccm.helper.toDotNotation(data,true);mask=ccm.helper.toDotNotation(mask);const result={};for(const key in mask)ccm.helper.deepValue(result,key,mask[key]?data[key]:"");return result};export const filterProperties=(obj,...keys)=>{const result={};keys.forEach(key=>{if(obj[key]!==undefined)result[key]=obj[key]});return result};export const renameProperty=(obj,before,after)=>{obj[after]=obj[before];delete obj[before];if(obj[after]===undefined)delete obj[after]};export const shuffleArray=array=>{for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}return array};export const unescapeHTML=value=>{const element=document.createElement("div");return value.replace(/\&[#0-9a-z]+;/gi,str=>{element.innerHTML=str;return element.innerText})};export const xml2json=xml=>{const json={};recursive(json,xml.firstElementChild);return json;function recursive(obj,elem){if(elem.childElementCount){obj[elem.tagName]={};Array.from(elem.children).forEach(child=>recursive(obj[elem.tagName],child))}else obj[elem.tagName]=elem.innerHTML}};export const dataset=async(settings={})=>{settings=ccm.helper.clone(settings);if(!ccm.helper.isDatastore(settings.store))return settings;if(!settings.key)settings.key=ccm.helper.generateKey();if(ccm.helper.isDataset(settings.key))return settings.convert?await settings.convert(settings.key):settings.key;const user=ccm.context.find(settings.store,"user");user&&settings.login&&await user.login();if(ccm.helper.isInstance(user)&&settings.user&&user.isLoggedIn())settings.key=[settings.key,user.data().key];let dataset=await settings.store.get(settings.key);if(!dataset){dataset={key:settings.key};if(settings.permissions)dataset._=settings.permissions}if(settings.convert)dataset=await settings.convert(dataset);return dataset};export const onFinish=async(settings,results)=>{let instance,user;settings=ccm.helper.clone(settings);results=ccm.helper.clone(results);if(ccm.helper.isInstance(settings)){instance=settings;if(!results&&settings.getValue)results=settings.getValue();settings=settings.onfinish;user=ccm.context.find(instance,"user")}if(!settings)return;if(typeof settings==="function")return settings(results,instance);if(settings.confirm&&!confirm(settings.confirm))return;if(settings.condition&&!await settings.condition(results,instance))return;user&&settings.login&&await user.login();if(settings.convert)results=await settings.convert(results,instance);settings.log&&console.log(results);if(instance&&settings.clear)instance.element.innerHTML="";if(settings.store&&results){const dataset=ccm.helper.clone(results);if(instance&&settings.store===true){settings.store={};if(ccm.helper.isObject(instance.data)&&ccm.helper.isDatastore(instance.data.store)){settings.store=ccm.helper.clone(instance.data);settings.store.settings=settings.store.store;delete settings.store.store}}dataset.key=settings.store.key||ccm.helper.generateKey();if(!Array.isArray(dataset.key)&&(settings.store.user||settings.store.unique))dataset.key=[dataset.key];settings.store.user&&user&&user.isLoggedIn()&&dataset.key.push(user.data().key);settings.store.unique&&dataset.key.push(ccm.helper.generateKey());if(dataset.key.length===1)dataset.key=dataset.key[0];if(settings.store.permissions)dataset._=settings.store.permissions;if(user)settings.store.settings.user=user;await ccm.store(settings.store.settings).then(store=>store.set(dataset))}if(settings.alert)alert(settings.alert);instance&&settings.restart&&await instance.start();if(settings.render)if(ccm.helper.isObject(settings.render)&&settings.render.component){const config=settings.render.config||{};if(!config.root&&instance)config.root=instance&&instance.root.parentElement;if(!config.parent&&config.parent!==false&&instance&&instance.parent)config.parent=instance.parent;await ccm.start(settings.render.component,config)}else instance&&setContent(instance.root,ccm.helper.html(settings.render),ccm);settings.callback&&await settings.callback(results,instance)};export const append=(elem,...content)=>{content.forEach(content=>{if(Array.isArray(content))return content.forEach(content=>append(elem,content));content=protect(ccm.helper.html(content));if(typeof content==="object")elem.appendChild(content);else elem.insertAdjacentHTML("beforeend",content)})};export const prepend=(elem,...content)=>{content.reverse().forEach(content=>{if(Array.isArray(content))return content.reverse().forEach(content=>prepend(elem,content));if(!elem.hasChildNodes())return append(elem,content);content=protect(ccm.helper.html(content));if(typeof content==="object")elem.insertBefore(content,elem.firstChild);else elem.insertAdjacentHTML("afterbegin",content)})};export const remove=elem=>elem&&elem.parentNode&&elem.parentNode.removeChild(elem);export const replace=(elem,other)=>elem.parentNode&&elem.parentNode.replaceChild(protect(ccm.helper.html(other)),elem);export const setContent=(elem,...content)=>{elem.innerHTML="";append(elem,content)};export const fillForm=(elem,data)=>{data=ccm.helper.clone(data);const dot=ccm.helper.toDotNotation(data,true);for(const key in dot)data[key]=dot[key];for(const key in data){if(!data[key])continue;if(typeof data[key]==="object")data[key]=encodeJSON(data[key],ccm);elem.querySelectorAll('[name="'+key+'"]').forEach(input=>{if(input.type==="checkbox"){if(data[key]===input.value)input.checked=true;else if(input.value&&typeof data[key]==="string"&&data[key].charAt(0)==="[")decodeJSON(data[key],ccm).forEach(value=>{if(value===input.value)input.checked=true});else input.checked=true}else if(input.type==="radio"){if(data[key]===input.value)input.checked=true}else if(input.tagName.toLowerCase()==="select"){if(input.hasAttribute("multiple"))data[key]=decodeJSON(data[key],ccm);input.querySelectorAll("option").forEach(option=>{if(input.hasAttribute("multiple"))data[key].forEach(value=>encodeJSON(value,ccm)===(option.value?option.value:option.innerHTML.trim())&&(option.selected=true));else if(data[key]===(option.value?option.value:option.innerHTML.trim()))option.selected=true})}else if(input.value===undefined)input.innerHTML=protect(data[key],ccm);else input.value=data[key]})}};export const formData=(elem,settings={})=>{const data={};elem.querySelectorAll("[name]").forEach(input=>{if(settings.enabled_only&&input.disabled)return;let name=input.getAttribute("name");if(input.type==="checkbox"){const value=input.checked?input.value==="on"?true:input.value:input.value==="on"?false:"";const multi=[...elem.querySelectorAll('[name="'+name+'"]')].length>1;if(multi){if(!data[name])data[name]=[];value&&data[name].push(value)}else data[name]=value}else if(input.type==="radio")data[name]=input.checked?input.value:data[name]?data[name]:"";else if(input.tagName.toLowerCase()==="select"){let result=[];if(input.hasAttribute("multiple"))input.querySelectorAll("option").forEach(option=>option.selected&&result.push(option.value?option.value:option.inner));else input.querySelectorAll("option").forEach(option=>{if(option.selected)result=option.value?option.value:option.inner});data[name]=result}else if(input.type==="number"||input.type==="range"){let value=parseInt(input.value);if(isNaN(value))value="";data[name]=value}else if(input.value!==undefined)data[name]=input.value;else data[input.getAttribute("name")]=input.innerHTML;try{if(typeof data[name]==="string")if(ccm.helper.regex("json").test(data[name]))data[name]=decodeJSON(data[name],ccm)}catch(err){}});return ccm.helper.solveDotNotation(data)};export const appURL=(component,config={},url="https://ccmjs.github.io/digital-maker-space/app.html")=>{if(ccm.helper.isDatastore(config.store))config.store=config.store.source();return`${url}#component=${encodeURIComponent(component)}&config=${encodeURIComponent(ccm.helper.stringify(config))}`};export const decomposeAppURL=app_url=>{const result={};try{app_url=decodeURIComponent(app_url)}catch(e){}app_url.substr(app_url.indexOf("#")+1).split("&").forEach(part=>{part=part.split("=");result[part[0]]=part[1]});if(result.config)if(result.config==="{}")delete result.config;else result.config=JSON.parse(result.config);return result};export const decomposeEmbedCode=embed_code=>{embed_code=ccm.helper.html(`<div>${embed_code}</div>`,undefined,{no_evaluation:true});const result={component:embed_code.firstChild.getAttribute("src")||embed_code.firstChild.getAttribute("component"),config:embed_code.lastChild.getAttribute("key")};if(result.config)if(result.config==="{}")delete result.config;else result.config=JSON.parse(result.config);if(Array.isArray(result.config))result.config={store:result.config[1],key:result.config[2]};return result};export const downloadApp=async(embed_code,filename="app",title="App",template="https://ccmjs.github.io/akless-components/resources/templates/app.html")=>{template=await fetch(template).then(response=>response.text());template=template.replace("__TITLE__",title).replace("__EMBED__",embed_code);download(`${filename}.html`,template)};export const embedCode=(component,config={},noscript)=>{const index=ccm.helper.convertComponentURL(component).index;if(config.store&&config.key)config=["ccm.get",ccm.helper.isDatastore(config.store)?config.store.source():config.store,config.key];if(noscript)return`<ccm-app component='${component}' key='${ccm.helper.stringify(config)}'></ccm-app>`;else return`<script src='${component}'><\/script><ccm-${index} key='${ccm.helper.stringify(config)}'></ccm-${index}>`};export const iBookWidget=async(embed_code,filename="app",title="App",folder="app",template="https://ccmjs.github.io/akless-components/resources/templates/app.html",info_file="https://ccmjs.github.io/akless-components/resources/templates/ibook_widget/Info.plist",image_file="https://ccmjs.github.io/akless-components/resources/templates/ibook_widget/Default.png")=>{template=await fetch(template).then(response=>response.text());template=template.replace("__TITLE__",title).replace("__EMBED__",embed_code);info_file=await fetch(info_file).then(response=>response.blob());image_file=await fetch(image_file).then(response=>response.blob());!window.JSZip&&await loadScript("https://ccmjs.github.io/akless-components/libs/jszip/jszip.min.js");!window.saveAs&&await loadScript("https://ccmjs.github.io/akless-components/libs/FileSaver/FileSaver.js");let widgetZip=new JSZip;widgetZip.folder(`${folder}.wdgt`).file("index.html",template);widgetZip.folder(`${folder}.wdgt`).file("Info.plist",info_file);widgetZip.folder(`${folder}.wdgt`).file("Default.png",image_file);widgetZip=await widgetZip.generateAsync({type:"blob"});saveAs(widgetZip,`${filename}.zip`)};export const scorm=async(embed_code,filename="app",title="App",identifier="App",html_template="https://ccmjs.github.io/akless-components/resources/templates/scorm/index.html",manifest_template="https://ccmjs.github.io/akless-components/resources/templates/scorm/imsmanifest.xml",api_file="https://ccmjs.github.io/akless-components/resources/templates/scorm/SCORM_API_wrapper.js")=>{html_template=await fetch(html_template).then(response=>response.text());html_template=html_template.replace("__TITLE__",title).replace("__EMBED__",embed_code);manifest_template=await fetch(manifest_template).then(response=>response.text());manifest_template.replace("__IDENTIFIER__",identifier).replace("__TITLE__",title);api_file=await fetch(api_file).then(response=>response.blob());!window.JSZip&&await loadScript("https://ccmjs.github.io/akless-components/libs/jszip/jszip.min.js");!window.saveAs&&await loadScript("https://ccmjs.github.io/akless-components/libs/FileSaver/FileSaver.js");let widgetZip=new JSZip;widgetZip.file("index.html",html_template);widgetZip.file("imsmanifest.xml",manifest_template);widgetZip.file("SCORM_API_wrapper.js",api_file);widgetZip=await widgetZip.generateAsync({type:"blob"});saveAs(widgetZip,`${filename}.zip`)};export const copyToClipboard=elem=>{elem.select();document.execCommand("copy")};export const download=(filename,content,mime="text/html;charset=utf-8")=>{const element=document.createElement("a");element.setAttribute("href",`data:${mime},${encodeURIComponent(content)}`);element.setAttribute("download",filename);element.style.display="none";document.body.appendChild(element);element.click();document.body.removeChild(element)};export const fullscreen=elem=>{if(elem.requestFullscreen)elem.requestFullscreen();else if(elem.mozRequestFullScreen)elem.mozRequestFullScreen();else if(elem.webkitRequestFullscreen)elem.webkitRequestFullscreen();else if(elem.msRequestFullscreen)elem.msRequestFullscreen()};export const loadScript=async url=>new Promise((resolve,reject)=>{const script=document.createElement("script");document.head.appendChild(script);script.onload=(()=>{document.head.removeChild(script);resolve()});script.onerror=(()=>{document.head.removeChild(script);reject()});script.async=true;script.src=url});export const progressBar=(elem,actual=0,total=100)=>{const main=document.createElement("div");main.innerHTML=`<div>${actual}/${total}</div><div><div></div></div>`;main.setAttribute("style","min-width: 200px; max-width: 90%; margin: 1em 5%; padding: 0.5em 1em; display: flex; align-items: center; border: 1px solid lightgray; border-radius: 20px;");elem.appendChild(main);const points=main.querySelector("div > div:first-child");points.setAttribute("style","font-family: Verdana, Arial, sans-serif; font-size: 15px; font-stretch: expanded; margin-right: 0.5em; top: 2px;");const progress_bar=main.querySelector("div > div:last-child");progress_bar.setAttribute("style","width: 100%; height: 20px; background-color: #ddd; border-radius: 10px; overflow: hidden; position: relative;");const progress=progress_bar.querySelector("div");progress.setAttribute("style","width: 0%; height: 20px; background-color: #4CAF50; position: absolute;");setTimeout(()=>{const goal=actual*progress_bar.offsetWidth/total;let width=1;let id=setInterval(()=>width>=goal?clearInterval(id):progress.style.width=++width+"px",8)},8)};export const hasPermission=(settings,user,operation)=>{settings=settings._?settings._:settings;if(user&&user.getValue)user=user.getValue();if(!settings||!settings.creator||!settings.realm)return true;if(Array.isArray(settings.access))return true;const access=typeof settings.access==="object"?settings.access[operation]:settings.access;if(access==="all")return true;if(!user||!user.key||user.realm!==settings.realm)return false;if(user.key===settings.creator)return true;if(access==="group")return Array.isArray(settings.group)&&settings.group.includes(user.key);const groups=access.split(",");for(let i=0;i<groups.length;i++)if(settings.group&&settings.group[groups[i]]&&settings.group[groups[i]].includes(user.key))return true;return false};export const isCreator=(dataset,user)=>{if(user.getValue)user=user.getValue();return user&&dataset&&dataset._&&user.key&&user.key===dataset._.creator&&user.realm&&user.realm===dataset._.realm};export const privatize=(instance,...keys)=>{let keep=false;if(keys[0]===true)keep=keys.shift();const obj={};if(keys.length)keys.forEach(key=>privatizeProperty(key));else for(const key in instance)privatizeProperty(key);return obj;function privatizeProperty(key){if(key===true)return;switch(key){case"ccm":case"component":case"config":case"element":case"id":case"index":case"inner":case"parent":case"root":case"shadow":break;default:if(typeof instance[key]==="function")return;if(instance[key]!==undefined)obj[key]=instance[key];if(!keep)delete instance[key]}}};export const protect=html=>{if(typeof html==="string")return html.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");if(ccm.helper.isElement(html))[...html.querySelectorAll("script")].forEach(remove);return html};