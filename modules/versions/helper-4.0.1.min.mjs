export async function action(action,context){const ccm=framework(arguments);if(!Array.isArray(action))action=[action];action[0]=await ccm.helper.solveDependency(action[0]);if(typeof action[0]==="function")return action[0].apply(context,action.slice(1));else return executeByName(action[0],action.slice(1),context,ccm)}export function executeByName(name,args,context){const namespaces=name.split(".");let flag;if(namespaces[0]==="this")flag=!!namespaces.shift();let namespace=flag?context:window;name=namespaces.pop();namespaces.forEach(value=>namespace=namespace[value]);return namespace[name].apply(context,args)}export async function asyncForEach(array,callback){for(let i=0;i<array.length;i++)await callback(array[i],i,array)}export function sleep(time){return new Promise(resolve=>setTimeout(resolve,time))}export function hasDomContact(instance){const ccm=framework(arguments);return document.contains(ccm.context.root(instance).root)&&(hasParentContact(instance,ccm)||!instance.parent)}export function hasParentContact(instance){return instance.parent&&instance.parent.element.contains(instance.root)}export function isFirefox(){return navigator.userAgent.search("Firefox")>-1}export function isGoogleChrome(){return/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}export function isSafari(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}export function arrToObj(obj,key){const arr=key?obj[key]:obj;if(!Array.isArray(arr))return null;const result={};arr.forEach(value=>result[value]=true);if(key)obj[key]=result;return result}export function cleanObject(obj,deep){const ccm=framework(arguments);if(Array.isArray(obj)){for(let i=obj.length-1;i>=0;i--)if(!obj[i])obj.splice(i,1);else if(deep&&typeof obj[i]==="object"&&!ccm.helper.isSpecialObject(obj[i]))cleanObject(obj[i],ccm)}else for(const key in obj)if(obj.hasOwnProperty(key))if(!obj[key])delete obj[key];else if(deep&&typeof obj[key]==="object"&&!ccm.helper.isSpecialObject(obj[key]))cleanObject(obj[key],ccm);return obj}export function decodeJSON(str){const ccm=framework(arguments);if(typeof str!=="string"||!ccm.helper.regex("json").test(str))return str;return ccm.helper.parse(str.replace(/%'%/g,'"'))}export function encodeJSON(json){const ccm=framework(arguments);if(typeof json!=="object")return json;return ccm.helper.stringify(json).replace(/"/g,"%'%")}export function escapeHTML(value){const text=document.createTextNode(value);const div=document.createElement("div");div.appendChild(text);return div.innerHTML}export function filterProperties(obj,properties){const result={};properties=[...arguments];properties.shift();properties.forEach(property=>{if(obj[property]!==undefined)result[property]=obj[property]});return result}export function renameProperty(obj,before,after){obj[after]=obj[before];delete obj[before];if(obj[after]===undefined)delete obj[after]}export function shuffleArray(array){for(let i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}}export function unescapeHTML(value){const element=document.createElement("div");return value.replace(/\&[#0-9a-z]+;/gi,x=>{element.innerHTML=x;return element.innerText})}export async function dataset(settings={}){const ccm=framework(arguments);settings=ccm.helper.clone(settings);if(!ccm.helper.isDatastore(settings.store))return settings;if(!settings.key)settings.key=ccm.helper.generateKey();if(ccm.helper.isDataset(settings.key))return settings.convert?await settings.convert(settings.key):settings.key;const user=ccm.context.find(settings.store,"user");user&&settings.login&&await user.login();if(ccm.helper.isInstance(user)&&settings.user&&user.isLoggedIn())settings.key=[settings.key,user.data().key];let dataset=await settings.store.get(settings.key);if(!dataset){dataset={key:settings.key};if(settings.permissions)dataset._=settings.permissions}if(settings.convert)dataset=await settings.convert(dataset);return dataset}export async function onFinish(settings,results){const ccm=framework(arguments);let instance,user;settings=ccm.helper.clone(settings);results=ccm.helper.clone(results);if(ccm.helper.isInstance(settings)){instance=settings;if(!results&&settings.getValue)results=settings.getValue();settings=settings.onfinish;user=ccm.context.find(instance,"user")}if(!settings)return;if(typeof settings==="function")return settings(results,instance);if(settings.confirm&&confirm(!settings.confirm))return;if(settings.condition&&!await settings.condition(results,instance))return;user&&settings.login&&await user.login();if(settings.convert)results=await settings.convert(results,instance);settings.log&&console.log(results);if(instance&&settings.clear)instance.element.innerHTML="";if(settings.store&&results){const dataset=ccm.helper.clone(results);if(instance&&settings.store===true){settings.store={};if(ccm.helper.isObject(instance.data)&&ccm.helper.isDatastore(instance.data.store)){settings.store=ccm.helper.clone(instance.data);settings.store.settings=settings.store.store;delete settings.store.store}}dataset.key=settings.store.key||ccm.helper.generateKey();if(!Array.isArray(dataset.key)&&(settings.store.user||settings.store.unique))dataset.key=[dataset.key];settings.store.user&&user&&user.isLoggedIn()&&dataset.key.push(user.data().key);settings.store.unique&&dataset.key.push(ccm.helper.generateKey());if(settings.store.permissions)dataset._=settings.store.permissions;if(user)settings.store.settings.user=user;await ccm.set(settings.store.settings,dataset)}if(settings.alert)alert(settings.alert);instance&&settings.restart&&await instance.start();if(settings.render)if(ccm.helper.isObject(settings.render)&&settings.render.component){let config=settings.render.config||{};config.root=config.root||instance&&instance.root;config.parent=!settings.render.root&&instance&&instance.parent;await ccm.start(settings.render.component,config)}else instance&&setContent(instance.root,ccm.helper.html(settings.render),ccm);settings.callback&&await settings.callback(results,instance)}export function append(element,content){const ccm=framework(arguments);content=[...arguments];content.shift();content.forEach(content=>{if(Array.isArray(content))return content.forEach(content=>append(element,content,ccm));content=protect(ccm.helper.html(content),ccm);if(typeof content==="object")element.appendChild(content);else element.insertAdjacentHTML("beforeend",content)})}export function prepend(element,content){const ccm=framework(arguments);content=[...arguments].reverse();content.pop();content.forEach(content=>{if(Array.isArray(content))return content.reverse().forEach(content=>prepend(element,content,ccm));if(!element.hasChildNodes())return append(element,content,ccm);content=protect(ccm.helper.html(content),ccm);if(typeof content==="object")element.insertBefore(content,element.firstChild);else element.insertAdjacentHTML("afterbegin",content)})}export function remove(element){element&&element.parentNode&&element.parentNode.removeChild(element)}export function replace(element,other){const ccm=framework(arguments);element.parentNode&&element.parentNode.replaceChild(protect(ccm.helper.html(other),ccm),element)}export function setContent(element,content){element.innerHTML="";append.apply(null,arguments)}export function fillForm(element,data){const ccm=framework(arguments);data=ccm.helper.clone(data);const dot=ccm.helper.toDotNotation(data,true);for(const key in dot)data[key]=dot[key];for(const key in data){if(!data[key])continue;if(typeof data[key]==="object")data[key]=encodeJSON(data[key],ccm);element.querySelectorAll('[name="'+key+'"]').forEach(input=>{if(input.type==="checkbox"){if(input.value&&typeof data[key]==="string"&&data[key].charAt(0)==="[")decodeJSON(data[key],ccm).forEach(value=>{if(value===input.value)input.checked=true});else input.checked=true}else if(input.type==="radio"){if(data[key]===input.value)input.checked=true}else if(input.tagName.toLowerCase()==="select"){if(input.hasAttribute("multiple"))data[key]=decodeJSON(data[key],ccm);input.querySelectorAll("option").forEach(option=>{if(input.hasAttribute("multiple"))data[key].forEach(value=>encodeJSON(value,ccm)===(option.value?option.value:option.innerHTML.trim())&&(option.selected=true));else if(data[key]===(option.value?option.value:option.innerHTML.trim()))option.selected=true})}else if(input.value===undefined)input.innerHTML=protect(data[key],ccm);else input.value=data[key]})}}export function formData(element){const ccm=framework(arguments);const data={};element.querySelectorAll("[name]").forEach(input=>{let name=input.getAttribute("name");if(input.type==="checkbox"){const value=input.checked?input.value==="on"?true:input.value:input.value==="on"?false:"";const multi=[...element.querySelectorAll('[name="'+name+'"]')].length>1;if(multi){if(!data[name])data[name]=[];value&&data[name].push(value)}else data[name]=value}else if(input.type==="radio")data[name]=input.checked?input.value:data[name]?data[name]:"";else if(input.tagName.toLowerCase()==="select"){let result=[];if(input.hasAttribute("multiple"))input.querySelectorAll("option").forEach(option=>option.selected&&result.push(option.value?option.value:option.inner));else input.querySelectorAll("option").forEach(option=>{if(option.selected)result=option.value?option.value:option.inner});data[name]=result}else if(input.type==="number"||input.type==="range"){let value=parseInt(input.value);if(isNaN(value))value="";data[name]=value}else if(input.value!==undefined)data[name]=input.value;else data[input.getAttribute("name")]=input.innerHTML;try{if(typeof data[name]==="string")if(ccm.helper.regex("json").test(data[name]))data[name]=decodeJSON(data[name],ccm)}catch(err){}});return ccm.helper.solveDotNotation(data)}export function appURL(component,config={},website="https://ccmjs.github.io/digital-maker-space/app.html"){const ccm=framework(arguments);if(ccm.helper.isDatastore(config.store))config.store=config.store.source();return`${website}#component=${component}&config=${ccm.helper.stringify(config)}`}export function decomposeAppURL(app_url){const result={};try{app_url=decodeURIComponent(app_url)}catch(e){}app_url.substr(app_url.indexOf("#")+1).split("&").forEach(part=>{part=part.split("=");result[part[0]]=part[1]});if(result.config)if(result.config==="{}")delete result.config;else result.config=JSON.parse(result.config);return result}export function decomposeEmbedCode(embed_code){const ccm=framework(arguments);embed_code=ccm.helper.html(`<div>${embed_code}</div>`,undefined,{no_evaluation:true});const result={component:embed_code.firstChild.getAttribute("src")||embed_code.firstChild.getAttribute("component"),config:embed_code.lastChild.getAttribute("key")};if(result.config)if(result.config==="{}")delete result.config;else result.config=JSON.parse(result.config);if(Array.isArray(result.config))result.config={store:result.config[1],key:result.config[2]};return result}export async function downloadApp(embed_code,filename="app",title="App",template="https://ccmjs.github.io/akless-components/resources/templates/app.html"){template=await fetch(template).then(response=>response.text());template=template.replace("__TITLE__",title).replace("__EMBED__",embed_code);download(`${filename}.html`,template)}export function embedCode(component,config={},noscript){const ccm=framework(arguments);const index=ccm.helper.convertComponentURL(component).index;if(config.store&&config.key)config=["ccm.get",ccm.helper.isDatastore(config.store)?config.store.source():config.store,config.key];if(noscript)return`<ccm-app component='${component}' key='${ccm.helper.stringify(config)}'></ccm-app>`;else return`<script src='${component}'><\/script><ccm-${index} key='${ccm.helper.stringify(config)}'></ccm-${index}>`}export async function iBookWidget(embed_code,filename="app",title="App",folder="app",template="https://ccmjs.github.io/akless-components/resources/templates/app.html",info_file="https://ccmjs.github.io/akless-components/resources/templates/ibook_widget/Info.plist",image_file="https://ccmjs.github.io/akless-components/resources/templates/ibook_widget/Default.png"){template=await fetch(template).then(response=>response.text());template=template.replace("__TITLE__",title).replace("__EMBED__",embed_code);info_file=await fetch(info_file).then(response=>response.blob());image_file=await fetch(image_file).then(response=>response.blob());!window.JSZip&&await loadScript("https://ccmjs.github.io/akless-components/libs/jszip/jszip.min.js");!window.saveAs&&await loadScript("https://ccmjs.github.io/akless-components/libs/FileSaver/FileSaver.js");let widgetZip=new JSZip;widgetZip.folder(`${folder}.wdgt`).file("index.html",template);widgetZip.folder(`${folder}.wdgt`).file("Info.plist",info_file);widgetZip.folder(`${folder}.wdgt`).file("Default.png",image_file);widgetZip=await widgetZip.generateAsync({type:"blob"});saveAs(widgetZip,`${filename}.zip`)}export async function scorm(embed_code,filename="app",title="App",identifier="App",html_template="https://ccmjs.github.io/akless-components/resources/templates/scorm/index.html",manifest_template="https://ccmjs.github.io/akless-components/resources/templates/scorm/imsmanifest.xml",api_file="https://ccmjs.github.io/akless-components/resources/templates/scorm/SCORM_API_wrapper.js"){html_template=await fetch(html_template).then(response=>response.text());html_template=html_template.replace("__TITLE__",title).replace("__EMBED__",embed_code);manifest_template=await fetch(manifest_template).then(response=>response.text());manifest_template.replace("__IDENTIFIER__",identifier).replace("__TITLE__",title);api_file=await fetch(api_file).then(response=>response.blob());!window.JSZip&&await loadScript("https://ccmjs.github.io/akless-components/libs/jszip/jszip.min.js");!window.saveAs&&await loadScript("https://ccmjs.github.io/akless-components/libs/FileSaver/FileSaver.js");let widgetZip=new JSZip;widgetZip.file("index.html",html_template);widgetZip.file("imsmanifest.xml",manifest_template);widgetZip.file("SCORM_API_wrapper.js",api_file);widgetZip=await widgetZip.generateAsync({type:"blob"});saveAs(widgetZip,`${filename}.zip`)}export function copyToClipboard(element){element.select();document.execCommand("copy")}export function download(filename,content,mime="text/html;charset=utf-8"){const element=document.createElement("a");element.setAttribute("href",`data:${mime},${encodeURIComponent(content)}`);element.setAttribute("download",filename);element.style.display="none";document.body.appendChild(element);element.click();document.body.removeChild(element)}export function fullscreen(element){if(element.requestFullscreen)element.requestFullscreen();else if(element.mozRequestFullScreen)element.mozRequestFullScreen();else if(element.webkitRequestFullscreen)element.webkitRequestFullscreen();else if(element.msRequestFullscreen)element.msRequestFullscreen()}export function loading(instance){let element=instance?instance.element.parentNode:document.head;if(!element.querySelector("#ccm_keyframe")){const style=document.createElement("style");style.id="ccm_keyframe";style.appendChild(document.createTextNode("@keyframes ccm_loading { to { transform: rotate(360deg); } }"));element.appendChild(style)}element=document.createElement("div");element.classList.add("ccm_loading");element.setAttribute("style","display: grid; padding: 0.5em;");element.innerHTML='<div style="align-self: center; justify-self: center; display: inline-block; width: 2em; height: 2em; border: 0.3em solid #f3f3f3; border-top-color: #009ee0; border-left-color: #009ee0; border-radius: 50%; animation: ccm_loading 1.5s linear infinite;"></div>';return element}export async function loadScript(url){return new Promise((resolve,reject)=>{const script=document.createElement("script");document.head.appendChild(script);script.onload=(()=>{document.head.removeChild(script);resolve()});script.onerror=(()=>{document.head.removeChild(script);reject()});script.async=true;script.src=url})}export function privatize(object,properties){const keep=properties===true;const obj={};if(properties&&(!keep||arguments[2]))for(let i=1;i<arguments.length;i++)privatizeProperty(arguments[i]);else for(const key in object)privatizeProperty(key);return obj;function privatizeProperty(key){if(key===true)return;switch(key){case"ccm":case"component":case"config":case"element":case"id":case"index":case"parent":case"root":case"shadow":break;default:if(typeof object[key]==="function")return;if(object[key]!==undefined)obj[key]=object[key];if(!keep)delete object[key]}}}export function protect(html){const ccm=framework(arguments);if(typeof html==="string")return html.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");if(ccm.helper.isElement(html))[...html.querySelectorAll("script")].forEach(remove);return html}function framework(args){const last=args[args.length-1];if(typeof last==="object"&&last!==null&&last.components&&last.version){delete args[args.length-1];args.length--;return last}return window.ccm}