(function(){const component={name:"submit",version:[4,1,0],ccm:"https://ccmjs.github.io/ccm/versions/ccm-18.1.0.js",config:{data:{store:["ccm.store"]}},Instance:function(){let $;let inputs;let element;this.ready=(async()=>{$=this.ccm.helper;this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{if(!this.inner)return;const inner=this.inner.cloneNode(true);inputs=[];[...inner.querySelectorAll("input")].forEach(input=>{const type=input.getAttribute("type");switch(type){case"button":case"checkbox":case"color":case"date":case"datetime-local":case"email":case"file":case"hidden":case"image":case"month":case"number":case"password":case"radio":case"range":case"reset":case"search":case"submit":case"tel":case"text":case"time":case"url":case"week":break;default:if(!this[type])return;let loading=$.loading(this);inputs.push({elem:loading,type:type,name:input.name});input.parentNode.replaceChild(loading,input)}});[...inner.querySelectorAll("[name]")].forEach(elem=>{elem.onchange=(event=>{const value=$.deepValue(this.getValue(),elem.name);this.logger&&this.logger.log("change",{name:elem.name,value:$.clone(value)});this.onchange&&this.onchange.call(this,{name:elem.name,value:$.clone(value),event:event})})});const content=this.content&&await this.content.start({inner:inner});$.setContent(this.element,content?content.root:inner);element=content?content.element:this.element;const submit=element.querySelector("input[type=submit]");if(submit){submit.disabled=true;const form=document.createElement("form");element.parentNode.replaceChild(form,element);form.appendChild(element);form.onsubmit=(async event=>{event.preventDefault();this.user&&await this.user.login();let results=this.getValue();this.logger&&this.logger.log("submit",results);this.onfinish&&await $.onFinish(this,results)})}const dataset=await $.dataset(this.data);this.logger&&this.logger.log("start",$.clone(dataset));$.fillForm(element,dataset);for(let i=0;i<inputs.length;i++){const instance=await this[inputs[i].type].start({data:{store:["ccm.store",{config:dataset[inputs[i].name]}],key:"config"},onchange:()=>{const value=this.getValue();this.logger&&this.logger.log("change",{name:inputs[i].name,value:$.clone(value),builder:instance});this.onchange&&this.onchange.call(this,{name:inputs[i].name,value:$.clone(value),builder:instance})}});inputs[i].instance=instance;inputs[i].elem.parentNode.replaceChild(instance.root,inputs[i].elem)}if(submit)submit.disabled=false});this.getValue=(()=>{let results=$.formData(element);inputs.forEach(input=>results[input.name]=input.instance.getValue());return $.clone(results)})}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();