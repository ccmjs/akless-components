{var component={name:"user",version:[6,0,0],ccm:{url:"https://ccmjs.github.io/ccm/versions/ccm-16.6.0.js",integrity:"sha384-LcGBJPmX/Aq5Jkre3q9yE+UCsd7vPWIgeBb9ayc4TIAl5H1nJpewlkKCDK8eCc7s",crossorigin:"anonymous"},config:{html:{logged_in:{id:"logged_in",inner:[{id:"user",inner:"%user%"},{id:"button",inner:{tag:"button",inner:"Logout",onclick:"%click%"}}]},logged_out:{id:"logged_out",inner:{id:"button",inner:{tag:"button",inner:"Login",onclick:"%click%"}}}},context:true,realm:"guest",guest:"guest"},Instance:function(){const self=this;let my;let $;let dataset;let owner;const observers={};let loading=false;const waitlist=[];this.init=(callback=>{if(self.context){let context=self;do{context=self.ccm.context.find(context,"user")}while(context&&context.realm!==self.realm);self.context=context&&context.context||context||false}callback()});this.ready=(callback=>{$=self.ccm.helper;my=$.privatize(self);self.logger&&self.logger.log("ready",$.clone(my));owner=self.parent&&self.parent.index;if(self.onchange&&self.parent){self.addObserver(self.parent.index,self.onchange);delete self.onchange}my.logged_in?self.login(callback):callback()});this.start=(callback=>{if(my.context)return my.context.start(callback);self.logger&&self.logger.log("start",self.isLoggedIn());(self.isLoggedIn()?renderLoggedIn:renderLoggedOut)();callback&&callback();function renderLoggedIn(){$.setContent(self.element,$.html(my.html.logged_in,{user:dataset.user,click:()=>self.logout(undefined,"#")}))}function renderLoggedOut(){$.setContent(self.element,$.html(my.html.logged_out,{click:()=>self.login(undefined,"#")}))}});this.login=((callback,propagated)=>{if(my.context)return my.context.login(callback,propagated||owner);if(self.isLoggedIn())return callback&&callback();if(loading)return waitlist.push([self.login,callback]);const element_parent=self.parent&&self.parent.element&&self.parent.element.parentNode;const root_parent=element_parent?self.root.parentNode||document.createElement("div"):null;switch(my.realm){case"guest":success({user:my.guest,token:my.guest});break;case"demo":renderLoginForm({title:"Demo Mode: Please enter any username",no_password:true},username=>self.ccm.load({url:"https://ccm2.inf.h-brs.de",method:"POST",params:{realm:my.realm,username:username}},success));break;case"ccm":renderLoginForm({title:"Please authenticate with your <i>ccm</i> account"},(username,password)=>self.ccm.load({url:"https://ccm2.inf.h-brs.de",method:"POST",params:{realm:my.realm,username:username,password:password}},success));break;case"hbrsinfkaul":self.ccm.load({url:"https://kaul.inf.h-brs.de/login/login.php",method:"JSONP",params:{realm:my.realm}},response=>{response.token=response.user+"#"+response.token;success(response)});break;case"LEA":lea();break;case"VCRP_OpenOLAT":renderLoginForm({title:"Please enter your OpenOLAT username and password"},(username,password)=>self.ccm.load({url:"https://olat.vcrp.de/restapi/auth/"+username,params:{password:password}},success));break}function renderLoginForm(settings,callback){if(element_parent){self.parent.element.style.display="none";self.parent.element.parentNode.appendChild(self.root)}$.setContent(self.element,$.html(my.html.login_form,{title:settings.title,login:()=>callback(self.element.querySelector('input[name="username"]').value,self.element.querySelector('input[name="password"]').value),abort:()=>{if(element_parent){root_parent.appendChild(self.root);self.parent.element.style.display="block"}self.element&&self.start()},loginbox:()=>{self.element.querySelector("#loginbox").style.display="block";self.element.querySelector("#signupbox").style.display="none"},signup:()=>{self.element.querySelector("#loginbox").style.display="none";self.element.querySelector("#signupbox").style.display="block"}}));if(settings.no_password)self.element.querySelector("#password-entry").style.display="none"}function success(response){dataset=$.filterProperties(response,"user","token");if(element_parent){root_parent&&root_parent.appendChild(self.root);self.parent.element.style.display="block"}loading=false;self.logger&&self.logger.log("login");while(waitlist.length>0)$.action(waitlist.shift());self.start();callback&&callback();notify(true,propagated||owner)}function lea(){renderLoginForm({title:"Sign in"},(username,password)=>{soap({domain:"http://ilias-ccm.bib.h-brs.de",url:"http://ilias-ccm.bib.h-brs.de/webservice/soap/server.php",method:"login",params:{client:"iliasccm",username:username,password:password}},result=>{const token=/>([^>]+::.+)<\/sid>/.exec(result)[1];success({user:username,token:token})},()=>confirm("Try again?")&&lea())})}});this.logout=((callback,propagated)=>{if(my.context)return my.context.logout(callback,propagated||owner);if(!self.isLoggedIn()){callback&&callback();return self}if(loading){waitlist.push([self.logout,callback]);return self}switch(my.realm){case"guest":success();break;case"demo":case"ccm":self.ccm.load({url:"https://ccm2.inf.h-brs.de",method:"POST",params:{realm:my.realm,token:self.data().token}},success);break;case"hbrsinfkaul":self.ccm.load({url:"https://kaul.inf.h-brs.de/login/logout.php",method:"JSONP",params:{realm:my.realm}});success();break;case"LEA":soap({domain:"http://ilias-ccm.bib.h-brs.de",url:"http://ilias-ccm.bib.h-brs.de/webservice/soap/server.php",method:"logout",params:{sid:self.data().token}},success);break}return self;function success(){dataset=undefined;loading=false;self.logger&&self.logger.log("logout");while(waitlist.length>0)$.action(waitlist.shift());self.start();callback&&callback();notify(false,propagated||owner)}});this.isLoggedIn=(()=>{if(my.context)return my.context.isLoggedIn();return!!dataset});this.data=(()=>{if(my.context)return my.context.data();return dataset});this.getRealm=(()=>{if(my.context)return my.context.getRealm();return my.realm});this.addObserver=((observer,callback)=>{if(my.context)return my.context.addObserver(observer,callback);observers[observer]=callback});function notify(event,caller){for(const index in observers){if(index===caller)continue;observers[index](event)}}function soap(settings,success,error){let params="";for(const key in settings.params)params+="<"+key+">"+settings.params[key]+"</"+key+">";const xml=`<?xml version="1.0" encoding="utf-8"?>\n        <SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\n          <SOAP-ENV:Body>\n            <m:${settings.method} xmlns:m="${settings.domain}">\n               ${params}\n            </m:${settings.method}>\n          </SOAP-ENV:Body>\n        </SOAP-ENV:Envelope>`;const request=new XMLHttpRequest;request.open("POST",settings.url,true);request.setRequestHeader("Content-Type","text/xml");request.onreadystatechange=(()=>{if(request.readyState!==4)return;if(request.status===200&&success)success(request.response);if(request.status!==200&&error)error(request.response,request.status)});request.send(xml)}}};function p(){window.ccm[v].component(component)}const f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{const n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{const e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}}