(()=>{const component={name:"store",ccm:"https://ccmjs.github.io/ccm/versions/ccm-25.2.1.js",config:{builder:["ccm.component","https://ccmjs.github.io/akless-components/json_builder/versions/ccm.json_builder-2.1.0.js",{directly:true,height:"100px"}],css:["ccm.load","https://ccmjs.github.io/akless-components/store/resources/default.css","https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"],data:{store:["ccm.store"],key:{}},empty:"There are currently no accessible data sets in this data storage.",helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-4.2.0.mjs"],html:["ccm.load","https://ccmjs.github.io/akless-components/store/resources/templates.html"],overwrite:"Already exists. Overwrite?",wrong:"Something went wrong."},Instance:function(){let $,store;const self=this;this.ready=(async()=>{$=Object.assign({},this.ccm.helper,this.helper);this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{const datasets=await $.dataset(this.data);store=await this.ccm.store(datasets);this.logger&&this.logger.log("start",this.getValue());$.setContent(this.element,$.html(this.html.main,{store:this.data.store.source().name,oncreate:async()=>{const dataset={key:$.generateKey()};$.setContent(this.element.querySelector("#main"),$.html(this.html.dataset,{key:dataset.key.toString(),editable:false,onback:this.start,onsave:event=>save(event.target,editor.getValue())}));$.remove(this.element.querySelector("#edit"));$.remove(this.element.querySelector("#del"));const editor=await renderEditor(dataset)},onclear:async()=>{if(!confirm("Are you sure?"))return;await $.asyncForEach(datasets,dataset=>$.hasPermission(dataset,this.user,"del")&&this.data.store.del(dataset.key));alert("Cleared!");await this.start()}}));if(!datasets.length){$.remove(this.element.querySelector("#clear"));$.setContent(this.element.querySelector("#caption"),this.empty)}else{let del_exists=false;datasets.forEach(dataset=>{const edit=async()=>{$.setContent(this.element.querySelector("#main"),$.html(this.html.dataset,{key:dataset.key.toString(),editable:true,onback:this.start,onrename:async event=>{const new_key=event.target.innerHTML=event.target.innerText.trim();const old_key=dataset.key;if(new_key===old_key)return;if(!$.regex("key").test(new_key)){alert("Invalid Key");event.target.innerHTML=old_key;return}if(!confirm("Are you sure?"))return event.target.innerHTML=old_key;if(await this.data.store.get(new_key))if(!confirm(this.overwrite))return event.target.innerHTML=old_key;dataset.key=new_key;let result=await this.data.store.set(dataset);if(!$.isKey(result))return alert(this.wrong);result=await this.data.store.del(old_key);if(result!==true)return alert(this.wrong);alert("Saved!");this.start()},onsave:event=>save(event.target,editor.getValue()),ondel:del}));$.remove(this.element.querySelector("#edit"));this.element.querySelector("#save").classList.add("disabled");if(!$.hasPermission(dataset,this.user,"del"))$.remove(this.element.querySelector("#del"));const editor=await renderEditor(dataset)};const del=async()=>{if(!confirm("Are you sure?"))return;const result=await this.data.store.del(dataset.key);if(result!==true)return alert(this.wrong);alert("Deleted!");await this.start()};let entry;$.append(this.element.querySelector("#entries"),entry=$.html(this.html.entry,{key:dataset.key.toString(),onshow:async()=>{$.setContent(this.element.querySelector("#main"),$.html(this.html.dataset,{key:dataset.key.toString(),editable:false,onback:this.start,onedit:edit}));this.element.querySelector("#editor").innerHTML=`<code><pre>${$.stringify(dataset,null,4)}</pre></code>`;!$.hasPermission(dataset,this.user,"set")&&$.remove(this.element.querySelector("#edit"));$.remove(this.element.querySelector("#save"));$.remove(this.element.querySelector("#del"))},onedit:edit,ondel:del}));!$.hasPermission(dataset,this.user,"set")&&$.remove(entry.querySelector(".edit"));!$.hasPermission(dataset,this.user,"del")?$.remove(entry.querySelector(".del")):del_exists=true});!del_exists&&$.remove(this.element.querySelector("#clear"))}async function save(button,dataset){if(button.classList.contains("disabled"))return;let result=await self.data.store.del(dataset.key);if(result!==true)return alert(self.wrong);result=await self.data.store.set(dataset);if(!$.isKey(result))return alert(self.wrong);alert("Saved!");await self.start()}async function renderEditor(dataset){const local={};local[dataset.key]=dataset;return self.builder.start({root:self.element.querySelector("#editor"),data:{store:["ccm.store",{local:local}],key:dataset.key},nosubmit:true,oninput:function(){self.element.querySelector("#save").classList[this.isValid()&&$.stringify(this.getValue())!==$.stringify(dataset)?"remove":"add"]("disabled")}})}});this.getValue=(()=>$.clone(store.local))}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||["latest"])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){window.ccm[c].component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();