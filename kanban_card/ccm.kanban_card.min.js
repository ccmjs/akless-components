(()=>{const component={name:"kanban_card",ccm:"https://ccmjs.github.io/ccm/versions/ccm-26.3.1.js",config:{css:["ccm.load","https://ccmjs.github.io/akless-components/kanban_card/resources/default.css"],data:{store:["ccm.store"]},editable:true,helper:["ccm.load","https://ccmjs.github.io/akless-components/modules/versions/helper-7.2.0.mjs"],html:["ccm.load","https://ccmjs.github.io/akless-components/kanban_card/resources/templates-v2.html"],icon:{owner:"https://ccmjs.github.io/akless-components/kanban_card/resources/owner.svg",deadline:"https://ccmjs.github.io/akless-components/kanban_card/resources/deadline.svg"},members:["John","Jane"],priorities:["A","B","C"],realtime:"change"},Instance:function(){let $,card_data;this.init=(async()=>{$=Object.assign({},this.ccm.helper,this.helper);$.use(this.ccm);this.data.store.onchange=(async priodata=>{if(priodata.key!==this.data.key)return;await this.refresh(priodata);this.onchange&&this.onchange({instance:this,extern:true})})});this.ready=(async()=>{this.logger&&this.logger.log("ready",$.privatize(this,true))});this.start=(async()=>{$.setContent(this.element,$.loading());card_data=await $.dataset(this.data);this.logger&&this.logger.log("start",this.getValue());$.setContent(this.element,$.html(this.html,await $.integrate({title:"",owner:"",summary:"",priority:"",deadline:"",icon_owner:this.icon.owner,icon_deadline:this.icon.deadline,editable:!!this.editable&&$.hasPermission(card_data,this.user,"set"),onfocus_title:event=>input(event.target,true),onfocus_owner:event=>select(event.target,true),onfocus_summary:event=>textarea(event.target),onfocus_priority:event=>select(event.target,false),onfocus_deadline:event=>input(event.target,false)},card_data,true)))});this.getValue=(()=>$.clone(card_data));this.refresh=(async(priodata=card_data)=>(!priodata.last_change||!await this.updateCardProperty(priodata.last_change.prop,priodata.last_change.value,true))&&await this.start());this.updateCardProperty=(async(prop,value,elem,store)=>{value=value.trim();switch(prop){case"title":case"owner":case"summary":case"priority":case"deadline":card_data[prop]=value;if(elem){elem=this.element.querySelector(`#${prop} .value`);if(elem)elem.innerHTML=value}if(!store||!this.data.store||!$.hasPermission(card_data,this.user,"set"))return true;card_data.last_change={prop:prop,value:value};try{await this.data.store.set($.filterProperties(card_data,"key",prop,"last_change"))}catch(e){return false}delete card_data.last_change;this.logger&&this.logger.log("change",{prop:prop,value:value,data:$.clone(card_data)});this.onchange&&await this.onchange({prop:prop,value:value,element:this.element.querySelector(`#${prop}`),instance:this});return true;default:return false}});const select=(elem,owner_or_prio)=>{const entries=[{tag:"option"}];this[owner_or_prio?"members":"priorities"].forEach(entry=>entries.push({tag:"option",inner:entry,selected:entry===card_data[owner_or_prio?"owner":"priority"]||""}));$.replace(elem,$.html({tag:"select",inner:entries,onchange:event=>this.updateCardProperty(owner_or_prio?"owner":"priority",event.target.value,true,true),onblur:event=>{$.replace(event.target,elem);elem.innerText=event.target.value}}));this.element.querySelector("select").focus()};const input=(elem,title_or_deadline)=>{const input={tag:"input",type:title_or_deadline?"text":"date",value:card_data[title_or_deadline?"title":"deadline"]||"",onblur:event=>{$.replace(event.target,elem);elem.innerText=event.target.value}};const update=event=>this.updateCardProperty(title_or_deadline?"title":"deadline",event.target.value,true,true);if(this.realtime==="input")input.oninput=update;if(this.realtime==="change")input.onchange=update;$.replace(elem,$.html(input));this.element.querySelector("input").focus();this.element.querySelector("input").select()};const textarea=elem=>{const textarea={tag:"textarea",inner:card_data.summary||"",onblur:event=>{$.replace(event.target,elem);elem.innerText=event.target.value}};const update=event=>this.updateCardProperty("summary",event.target.value,true,true);if(this.realtime==="input")textarea.oninput=update;if(this.realtime==="change")textarea.onchange=update;$.replace(elem,$.html(textarea));this.element.querySelector("textarea").focus();this.element.querySelector("textarea").select()}}};let b="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[b])return window.ccm.files[b]=component;(b=window.ccm&&window.ccm.components[component.name])&&b.ccm&&(component.ccm=b.ccm);"string"===typeof component.ccm&&(component.ccm={url:component.ccm});let c=(component.ccm.url.match(/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)/)||[""])[0];if(window.ccm&&window.ccm[c])window.ccm[c].component(component);else{var a=document.createElement("script");document.head.appendChild(a);component.ccm.integrity&&a.setAttribute("integrity",component.ccm.integrity);component.ccm.crossorigin&&a.setAttribute("crossorigin",component.ccm.crossorigin);a.onload=function(){(c="latest"?window.ccm:window.ccm[c]).component(component);document.head.removeChild(a)};a.src=component.ccm.url}})();